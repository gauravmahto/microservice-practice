// build.gradle

// Apply the 'java' plugin to add compilation and other Java-related tasks.
// The 'application' plugin adds tasks for running our app.
plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

// Specify the group and version for your project.
group 'com.example'
version '1.0-SNAPSHOT'

// Configure the Java compiler version.
java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

// Use current Helidon 3.x version via BOM.
ext {
    helidonVersion = '3.2.3'
}

// Define where to find the libraries (dependencies) our project needs.
// 'mavenCentral()' is a very common public repository.
repositories {
    mavenCentral()
}

// Define the libraries our project depends on.
dependencies {
    implementation platform("io.helidon:helidon-bom:${helidonVersion}")
    implementation "io.helidon.webserver:helidon-webserver"
    implementation "io.helidon.config:helidon-config"
    implementation "io.helidon.health:helidon-health"
    implementation "io.helidon.health:helidon-health-checks"
    // Optional: SLF4J simple for any libraries using slf4j (Helidon mainly uses JUL)
    implementation "org.slf4j:slf4j-simple:2.0.13"

    testImplementation platform("io.helidon:helidon-bom:${helidonVersion}")
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
}

// Tell the 'application' plugin where our main class is.
application {
    mainClass = 'com.example.SimpleWebServer'
}

// Ensure the built JAR is executable by adding the Main-Class manifest entry.
jar {
    manifest {
        attributes 'Main-Class': 'com.example.SimpleWebServer'
    }
}

shadowJar {
    archiveClassifier.set('all')
    manifest {
        attributes 'Main-Class': 'com.example.SimpleWebServer'
    }
}

test {
    useJUnitPlatform()
}
