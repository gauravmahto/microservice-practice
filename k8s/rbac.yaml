## RBAC resources for the practice application
# Apply with: kubectl apply -f k8s/rbac.yaml
# These objects live in (and only affect) the current namespace.
# 1. ServiceAccount: identity used by the Deployment's Pods.
# 2. Role: namespace-scoped permissions (least privilege) allowing limited Job management.
# 3. RoleBinding: attaches the Role to the ServiceAccount.
---
# 1. The identity for our application Pod
apiVersion: v1
kind: ServiceAccount
metadata:
  name: practice-app-sa
  # (Implicitly in the current namespace; add 'namespace:' if applying to another)
---
# 2. The permissions we want to grant
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-manager-role
  # Namespace-scoped Role (not ClusterRole); restricts access only within this namespace
rules:
- apiGroups: ["batch"] # The "batch" group contains Jobs and CronJobs
  resources: ["jobs"]
  # Verbs granted:
  # create -> allow app to launch a Job
  # get    -> read a specific Job's details
  # list   -> list Jobs (e.g., for status checks)
  # watch  -> watch Job status changes (stream)
  # delete -> clean up Jobs it created
  verbs: ["create", "get", "list", "watch", "delete"]
---
# 3. Connecting the identity to the permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: job-manager-binding
  # Binds the ServiceAccount to the Role within the same namespace
subjects:
- kind: ServiceAccount
  name: practice-app-sa
  # 'namespace' can be specified here if binding across namespaces (not typical for RoleBinding)
roleRef:
  kind: Role
  name: job-manager-role
  apiGroup: rbac.authorization.k8s.io
